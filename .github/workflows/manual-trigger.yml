name: Manual Trigger Integration Tests

on:
  workflow_dispatch:
    inputs:
      browser:
        description: Browser (can be chrome or firefox)
        default: chrome
        required: true
      environment:
        description: Environment (can be migrate or staging)
        default: migrate
        required: true

jobs:
  cypress-setup:
    runs-on: ubuntu-latest
    container:
      image: cypress/browsers:node14.17.0-chrome91-ff89
      options: --user 1001
    strategy:
      # when one test fails, DO NOT cancel the other
      # containers, because this will kill Cypress processes
      # leaving the Dashboard hanging ...
      # https://github.com/cypress-io/github-action/issues/48
      fail-fast: false
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Migrate Setup before Integration Tests
        uses: cypress-io/github-action@v2
        if: github.event.inputs.environment != 'staging'
        continue-on-error: true
        with:
          browser: ${{ github.event.inputs.browser }}
          record: true
          spec: cypress/e2e/setup/setup.spec.js
        env:
          CYPRESS_testEnv: migrate
          CYPRESS_password: ${{ secrets.MIGRATE_PASSWORD }}
          # pass the Dashboard record key as an environment variable
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          # pass GitHub token to allow accurately detecting a build vs a re-run build
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Staging Setup before Integration Tests
        uses: cypress-io/github-action@v2
        if: github.event.inputs.environment == 'staging'
        continue-on-error: true
        with:
          browser: ${{ github.event.inputs.browser }}
          record: true
          spec: cypress/e2e/setup/setup.spec.js
        env:
          CYPRESS_testEnv: staging
          CYPRESS_password: ${{ secrets.STAGING_PASSWORD }}
          # pass the Dashboard record key as an environment variable
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          # pass GitHub token to allow accurately detecting a build vs a re-run build
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  cypress-tests:
    needs: cypress-setup
    if: always()
    runs-on: ubuntu-latest
    container:
      image: cypress/browsers:node14.17.0-chrome91-ff89
      options: --user 1001
    strategy:
      # when one test fails, DO NOT cancel the other
      # containers, because this will kill Cypress processes
      # leaving the Dashboard hanging ...
      # https://github.com/cypress-io/github-action/issues/48
      fail-fast: false
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Migrate Run for Cypress Functional Tests
        uses: cypress-io/github-action@v2
        if: github.event.inputs.environment != 'staging'
        continue-on-error: true
        with:
          browser: ${{ github.event.inputs.browser }}
          record: true
          spec: cypress/e2e/functional/**/*
          parallel: false
        env:
          CYPRESS_testEnv: migrate
          CYPRESS_password: ${{ secrets.MIGRATE_PASSWORD }}
          # pass the Dashboard record key as an environment variable
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          # pass GitHub token to allow accurately detecting a build vs a re-run build
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Migrate Run for Cypress end-end Tests
        uses: cypress-io/github-action@v2
        if: github.event.inputs.environment != 'staging'
        continue-on-error: true
        with:
          browser: ${{ github.event.inputs.browser }}
          record: true
          spec: cypress/e2e/end-end/**/*
          parallel: false
        env:
          CYPRESS_testEnv: migrate
          CYPRESS_password: ${{ secrets.MIGRATE_PASSWORD }}
          # pass the Dashboard record key as an environment variable
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          # pass GitHub token to allow accurately detecting a build vs a re-run build
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Staging Run for Cypress Integration Tests
        uses: cypress-io/github-action@v2
        if: github.event.inputs.environment == 'staging'
        continue-on-error: true
        with:
          browser: ${{ github.event.inputs.browser }}
          record: true
          spec: cypress/e2e/functional/**/*
          parallel: false
        env:
          CYPRESS_testEnv: staging
          CYPRESS_password: ${{ secrets.STAGING_PASSWORD }}
          # pass the Dashboard record key as an environment variable
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          # pass GitHub token to allow accurately detecting a build vs a re-run build
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Staging Run for Cypress end-end Tests
        uses: cypress-io/github-action@v2
        if: github.event.inputs.environment == 'staging'
        continue-on-error: true
        with:
          browser: ${{ github.event.inputs.browser }}
          record: true
          spec: cypress/e2e/end-end/**/*
          parallel: false
        env:
          CYPRESS_testEnv: staging
          CYPRESS_password: ${{ secrets.STAGING_PASSWORD }}
          # pass the Dashboard record key as an environment variable
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          # pass GitHub token to allow accurately detecting a build vs a re-run build
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
