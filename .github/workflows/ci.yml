name: Continuous Integration

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  cypress-setup:
    runs-on: ubuntu-latest
    strategy:
      # when one test fails, DO NOT cancel the other
      # containers, because this will kill Cypress processes
      # leaving the Dashboard hanging ...
      # https://github.com/cypress-io/github-action/issues/48
      fail-fast: false
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup before Integration Tests
        uses: cypress-io/github-action@v2
        continue-on-error: true
        with:
          record: true
          spec: cypress/integration/setup/setup.spec.js
        env:
          CYPRESS_password: ${{ secrets.QA_PASSWORD }}
          CYPRESS_testEnv: qa
          # pass the Dashboard record key as an environment variable
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          # pass GitHub token to allow accurately detecting a build vs a re-run build
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  cypress-tests:
    needs: cypress-setup
    if: always()
    runs-on: ubuntu-latest
    strategy:
      # when one test fails, DO NOT cancel the other
      # containers, because this will kill Cypress processes
      # leaving the Dashboard hanging ...
      # https://github.com/cypress-io/github-action/issues/48
      fail-fast: false
      matrix:
        # run 3 copies of the current job in parallel
        containers: [1, 2, 3]
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Run Cypress Integration Tests
        uses: cypress-io/github-action@v2
        continue-on-error: true
        with:
          record: true
          spec: cypress/integration/tests/**/*
          # only do parallel if we have a record key
          parallel: ${{ !!secrets.CYPRESS_RECORD_KEY }}
        env:
          CYPRESS_password: ${{ secrets.QA_PASSWORD }}
          CYPRESS_testEnv: qa
          # pass the Dashboard record key as an environment variable
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          # pass GitHub token to allow accurately detecting a build vs a re-run build
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  cypress-teardown:
    needs: [cypress-setup, cypress-tests]
    if: always()
    runs-on: ubuntu-latest
    strategy:
      # when one test fails, DO NOT cancel the other
      # containers, because this will kill Cypress processes
      # leaving the Dashboard hanging ...
      # https://github.com/cypress-io/github-action/issues/48
      fail-fast: false
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Teardown after Integration Tests
        uses: cypress-io/github-action@v2
        continue-on-error: true
        with:
          record: true
          spec: cypress/integration/tteardown/teardown.spec.js
        env:
          CYPRESS_password: ${{ secrets.QA_PASSWORD }}
          CYPRESS_testEnv: qa
          # pass the Dashboard record key as an environment variable
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          # pass GitHub token to allow accurately detecting a build vs a re-run build
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
